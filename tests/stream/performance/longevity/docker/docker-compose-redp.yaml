version: "3.7"
services:
  proton-server:
    image: ghcr.io/timeplus-io/proton:${PROTON_VERSION:-develop}
    pull_policy: always
    container_name: proton-server
    volumes:
      - ./proton/data:/var/lib/proton
      - ./proton/log:/var/log/proton-server
      - ./data:/timeplus/data
    ports:
      - "3218:3218" # HTTP Streaming
      - "8123:8123" # HTTP Snapshot
      - "8463:8463" # TCP Streaming
      - "5432:5432" # Postgres Snapshot
      - "7587:7587" # TCP Snapshot
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    # `proton` depends on STREAM_STORAGE_BROKERS env variable
    # to discover stream store
    environment:
      - STREAM_STORAGE_BROKERS=stream-store:9092
      - MAX_CONCURRENT_QUERIES=10000                # Default: 100
      - MAX_CONCURRENT_SELECT_QUERIES=5000         # Default: 100
      - MAX_CONCURRENT_INSERT_QUERIES=5000         # Default: 100
      - MAX_CONCURRENT_STREAMING_QUERIES=5000      # Default: 100
      - MAX_SERVER_MEMORY_USAGE_TO_RAM_RATIO=0.9  # Default: 0.9
      - MAX_SERVER_MEMORY_CACHE_TO_RAM_RATIO=0.5  # Default: 0.5
      - STREAM_STORAGE_TYPE=kafka      
    command: >
      /bin/bash -c "echo sleeping; sleep 2; /entrypoint.sh"
    depends_on:
      - stream-store
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  stream-store:
    image: docker.vectorized.io/vectorized/redpanda:v21.11.9
    container_name: stream-store
    ports:
      - "9093:9092"
      - "29092:29092"
    volumes:
      - ./proton/stream_store/data:/var/lib/redpanda/data
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --memory
      - 1G
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://stream-store:29092,OUTSIDE://stream-store:9092
      - --set
      - "redpanda.auto_create_topics_enabled=false"
      - --set
      - "redpanda.enable_idempotence=true"
      - --check=false

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.33.4
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/conf:/etc/prometheus/
    command:
      --config.file=/etc/prometheus/prometheus.yml
      --web.config.file=/etc/prometheus/web-config.yml

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro 
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      --disable_metrics=percpu,advtcp,network --docker_only=true
