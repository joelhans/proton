version: "3.7"

# this is an extension field, its name must start with `x-`
x-logging: &default-logging
  driver: local
  options: # https://docs.docker.com/config/containers/logging/local/#options
    max-size: "20m"
    max-file: "5"
    compress: "true"

services:
  # Un-comment this section to deploy UI separately
  #  
  # axion:
  #   container_name: axion
  #   image: timeplus/axion:${AXION_TAG}
  #   pull_policy: always
  #   command: >
  #    sh -c "cp -r /data/console /axion/
  #    && cp -r /data/playground /axion/
  #    && chmod R +r /axion/
  #    && exit"
  #   volumes:
  #     - ./neutron/axion:/axion

  neutron:
    container_name: neutron
    extra_hosts: 
        - "kafka:${KAFKA_IP}"    
    logging: *default-logging
    image: timeplus/neutron:${NEUTRON_TAG}
    pull_policy: always
    command:
      # Make sure your log file is under /timeplus/logs, otherwise there will be permission issue
      --config=/timeplus/config/.neutron.yaml --show-api-doc --log-file-path=/timeplus/logs/neutron.log ${NEUTRON_EXTRA_OPTION}
    environment:
      - PROTON_ADDR=proton-server
      - PROTON_KV_ADDR=proton-server
      - PROTON_STATS_ADDR=proton-server
      - TLS=false
    volumes:
      - ./neutron/certificate:/certificate/
      - ./neutron/config:/timeplus/config/
      - ./neutron/logs:/timeplus/logs/
      # - ./neutron/axion/console:/timeplus/console/          # Un-comment this line to deploy UI separately
      # - ./neutron/axion/playground:/timeplus/playground/    # Un-comment this line to deploy UI separately
    ports:
      - "${NEUTRON_PORT}:8000"
    depends_on:
      - proton-server
  
  demoapp:
    container_name: demoapp
    logging: *default-logging
    image: timeplus/neutron:${NEUTRON_TAG}
    pull_policy: always
    command:
      demo --config=/timeplus/config/.neutron.yaml --log-file-path=/timeplus/logs/neutron.log
    environment:
      - PROTON_ADDR=proton-server
      - PROTON_KV_ADDR=proton-server
      - PROTON_STATS_ADDR=proton-server
      - TLS=false
      # - DEMO_SHOW_CASE=true
      - METRICS_STORE_TYPE=none
      # - RUN_WEB_SERVER=false
      - METADATA_STORE_TYPE=memory
    volumes:
      - ./demoapp/config:/timeplus/config/
      - ./demoapp/logs:/timeplus/logs/
    depends_on:
      - proton-server  

  proton-server:
    image: ghcr.io/timeplus-io/proton:${PROTON_TAG}
    logging: *default-logging
    pull_policy: always
    container_name: proton-server
    volumes:
      - ./proton/data:/var/lib/proton
      - ./proton/log:/var/log/proton-server
      - ./data:/timeplus/data
    ports:
      - "3218:3218" # HTTP Streaming
      # - "8123:8123" # HTTP Snapshot
      - "8463:8463" # TCP Streaming
      # - "5432:5432" # Postgres Snapshot, disable it by default to avoid conflicting with local pg
      - "7587:7587" # TCP Snapshot
      - "9444:9444" # KV port
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - MAX_CONCURRENT_QUERIES=10000
      - MAX_CONCURRENT_SELECT_QUERIES=5000
      - MAX_CONCURRENT_INSERT_QUERIES=5000
      - MAX_CONCURRENT_STREAMING_QUERIES=5000
      - MAX_SERVER_MEMORY_USAGE_TO_RAM_RATIO=0.7
      - MAX_SERVER_MEMORY_CACHE_TO_RAM_RATIO=0.2
    command: >
      /bin/bash -c "echo sleeping; sleep 2; /entrypoint.sh"
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  filebeat:
    image: docker.elastic.co/beats/filebeat:6.6.0
    container_name: filebeat
    extra_hosts: 
        - "kafka:${KAFKA_IP}" 
    user: "0:0"
    environment:
        - strict.perms=false
    volumes:
        - './filebeat.yml:/usr/share/filebeat/filebeat.yml:rw'
        - '${PROTON_LOG_PATH}:/usr/share/services/proton/logs/'
        - '${NEUTRON_LOG_PATH}:/usr/share/services/neutron/logs/'
        - '/var/run/docker.sock:/var/run/docker.sock:ro'
    depends_on:
        - neutron  


  prometheus:
    container_name: prometheus
    logging: *default-logging
    image: prom/prometheus:v2.33.4
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/conf:/etc/prometheus/
    command:
      --config.file=/etc/prometheus/prometheus.yml
      --web.config.file=/etc/prometheus/web-config.yml

  cadvisor:
    container_name: cadvisor
    logging: *default-logging
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro 
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    command:
      --disable_metrics=tcp,udp,hugetlb,diskIO,disk,memory_numa,percpu,advtcp,network --docker_only=true
